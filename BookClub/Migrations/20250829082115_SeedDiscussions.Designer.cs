// <auto-generated />
using System;
using BookClub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookClub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250829082115_SeedDiscussions")]
    partial class SeedDiscussions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookClub.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.smith@mail.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "123456",
                            Username = "alice_smith"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob.jones@mail.com",
                            FirstName = "Bob",
                            LastName = "Jones",
                            Password = "123456",
                            Username = "bob_jones"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie.brown@mail.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Password = "123456",
                            Username = "charlie_brown"
                        },
                        new
                        {
                            Id = 4,
                            Email = "diana.white@mail.com",
                            FirstName = "Diana",
                            LastName = "White",
                            Password = "123456",
                            Username = "diana_white"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ella.green@mail.com",
                            FirstName = "Ella",
                            LastName = "Green",
                            Password = "123456",
                            Username = "ella_green"
                        });
                });

            modelBuilder.Entity("BookClub.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Ava Miles",
                            Description = "A suspenseful thriller set in an eerie town.",
                            ISBN = "9780451491234",
                            Title = "The Silent Library"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Liam Frost",
                            Description = "A poetic journey through forgotten landscapes.",
                            ISBN = "9780143110433",
                            Title = "Gardens of Glass"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Elena Brook",
                            Description = "A tale of lost civilizations and secret histories.",
                            ISBN = "9780670022450",
                            Title = "Moonlight Archive"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Mason Quinn",
                            Description = "A gritty sci-fi about survival on a dying planet.",
                            ISBN = "9780316095839",
                            Title = "Echoes of Dust"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Harper Lee",
                            Description = "Short stories and memories from a reclusive writer.",
                            ISBN = "9780061120084",
                            Title = "Notes from the Attic"
                        });
                });

            modelBuilder.Entity("BookClub.Models.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("PostedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Discussions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            BookId = 1,
                            Comment = "The twist at the end completely caught me off guard. Anyone else?",
                            PostedAt = new DateTime(2025, 8, 20, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            BookId = 1,
                            Comment = "Totally! I had to go back a few chapters to see if there were clues.",
                            PostedAt = new DateTime(2025, 8, 20, 14, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 5,
                            BookId = 1,
                            Comment = "Same here. The author did a great job of hiding it in plain sight.",
                            PostedAt = new DateTime(2025, 8, 20, 14, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 3,
                            BookId = 2,
                            Comment = "Some parts felt like poetry. Did anyone else highlight passages?",
                            PostedAt = new DateTime(2025, 8, 21, 10, 10, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 4,
                            BookId = 2,
                            Comment = "Yes! The line about 'shattered reflections of memory' stuck with me.",
                            PostedAt = new DateTime(2025, 8, 21, 10, 32, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 2,
                            BookId = 3,
                            Comment = "Do you think the Archive was real or metaphorical?",
                            PostedAt = new DateTime(2025, 8, 22, 16, 5, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 1,
                            BookId = 3,
                            Comment = "I took it as metaphorical — like a memory palace. But I could be wrong.",
                            PostedAt = new DateTime(2025, 8, 22, 16, 25, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 3,
                            BookId = 3,
                            Comment = "That's what made it fun — it’s open to interpretation!",
                            PostedAt = new DateTime(2025, 8, 22, 16, 40, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 5,
                            BookId = 4,
                            Comment = "The planet reminded me of early Mars theories. Was it based on something real?",
                            PostedAt = new DateTime(2025, 8, 23, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 4,
                            BookId = 4,
                            Comment = "I think the author mentioned in an interview it was inspired by abandoned mining towns.",
                            PostedAt = new DateTime(2025, 8, 23, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 1,
                            BookId = 5,
                            Comment = "The short story about the photograph made me tear up. So personal.",
                            PostedAt = new DateTime(2025, 8, 24, 11, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 3,
                            BookId = 5,
                            Comment = "That was my favorite too. It felt like reading someone’s diary.",
                            PostedAt = new DateTime(2025, 8, 24, 11, 50, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BookClub.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            BookId = 1,
                            Comment = "Really enjoyed the suspense and pacing.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            BookId = 1,
                            Comment = "An instant favorite. Couldn’t put it down!",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            BookId = 2,
                            Comment = "Good writing, but not my genre.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 4,
                            BookId = 3,
                            Comment = "Loved the historical depth.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 5,
                            BookId = 4,
                            Comment = "Interesting premise, but slow in parts.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 2,
                            BookId = 5,
                            Comment = "Beautifully written and moving.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 1,
                            BookId = 3,
                            Comment = "Kept me engaged from start to finish.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 3,
                            BookId = 4,
                            Comment = "Incredible worldbuilding and emotion.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 4,
                            BookId = 2,
                            Comment = "Could use a stronger plot, but decent.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 5,
                            BookId = 5,
                            Comment = "Great for a weekend read!",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
